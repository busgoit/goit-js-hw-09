{"mappings":"AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,cAAeF,SAASC,cAAc,0BAGxC,IAAIE,EAAe,GAmCnB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAiBC,MAAU,GAEvDA,EAAM,G,CA3CbR,EAAKC,KAAKe,iBAAiB,SAG3B,SAAqBC,GACnB,OAAQA,EAAMC,QACZ,KAAKlB,EAAKC,KAAKO,MACbH,EAAaG,MAAQW,OAAOnB,EAAKC,KAAKO,MAAMY,OAC5C,MAEF,KAAKpB,EAAKC,KAAKoB,KACbhB,EAAagB,KAAOF,OAAOnB,EAAKC,KAAKoB,KAAKD,OAC1C,MAEF,KAAKpB,EAAKC,KAAKqB,OACbjB,EAAaiB,OAASH,OAAOnB,EAAKC,KAAKqB,OAAOF,O,IAbpDpB,EAAKC,KAAKe,iBAAiB,UAkB3B,SAAsBC,GACpBA,EAAMM,iBACN,IAAIf,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAAWjB,EAE9B,IAAK,IAAIE,EAAW,EAAGA,GAAYe,EAAQf,GAAY,EAIrDD,EAAcC,EAAUC,GAExBA,GAASa,C,IAkBbf,IACGkB,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,QAAQC,IAAI,uBAAqBnB,QAAiBC,MAAU,IAE7DmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBiB,QAAQC,IAAI,sBAAoBnB,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  formSubmitBtn: document.querySelector('button[type=\"submit\"]'),\n};\n\nlet promisesData = {};\n\nrefs.form.addEventListener('input', onFormInput);\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormInput(event) {\n  switch (event.target) {\n    case refs.form.delay:\n      promisesData.delay = Number(refs.form.delay.value);\n      break;\n\n    case refs.form.step:\n      promisesData.step = Number(refs.form.step.value);\n      break;\n\n    case refs.form.amount:\n      promisesData.amount = Number(refs.form.amount.value);\n      break;\n  }\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let { delay, step, amount } = promisesData;\n\n  for (let position = 1; position <= amount; position += 1) {\n    // console.log('position', position);\n    // console.log('delay', delay);\n\n    createPromise(position, delay);\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\ncreatePromise()\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$47d4ff9957288465$var$refs","form","document","querySelector","formSubmitBtn","$47d4ff9957288465$var$promisesData","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","target","Number","value","step","amount","preventDefault","then","console","log","catch"],"version":3,"file":"03-promises.ae0dcd5a.js.map"}